# -*- coding: utf-8 -*-
"""
@author: Dr. Stephan Paul (AWI/iceXai; stephan.paul@awi.de)
"""


# In[] 
from datetime import datetime, timedelta

from proc import ModisRetrievalProcessor

import os
import sys
import requests

import pandas as pd


# In[]


class Retrieval(object):
    """
    Abstract base class that handles the swath retrieval and post-processing 
    """
    def __init__(self, token: str, df: pd.DataFrame):
        """
        Parameters
        ----------
        token : str
            LAADS authentication token for the download (to be generated at 
            https://ladsweb.modaps.eosdis.nasa.gov/)
        """
        #store arguements
        self.token = token
        
    
    """ Setup """
    def set_meta(self, meta: object) -> None:
        self.meta = meta
    
    
    def set_io(self, io: object) -> None:
        self.io = io
    
    
    def set_resampling(self, resampling: object) -> None:
        self.resampling = resampling
        
    
    def set_listing(self, listing: pd.DataFrame) -> None:
        """
        Parameters
        ----------
        listing : pd.DataFrame
            pandas DataFrame containing all swaths to download in the specific 
            format generated by the according Listing child class from the 
            listing module
        """
        self.swaths_to_download = listing
        
        
    """ High-level (abstract) functions """
    def download_swath(self) -> None:
        pass
    
    
    def load_swath(self) -> None:
        pass
    
    
    def save_swath(self) -> None:
        pass
    
    
    def resample_swath(self) -> None:
        pass
    
    
    def cleanup(self) -> None:
        pass
    
