# Meta File for the SLSTR sensor (s3a/s3b)
urls:
    #retrieval url's for the different data types per sensor
    s3a:
        data: https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/450/S3A_SL_1_RBT/
        meta: https://ladsweb.modaps.eosdis.nasa.gov/archive/geoMetaSentinel3A/450/SLSTR/
    s3b:
        data: https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/450/S3B_SL_1_RBT/
        meta: https://ladsweb.modaps.eosdis.nasa.gov/archive/geoMetaSentinel3B/450/SLSTR/

filetype:
    stack
       
variables:
    lat:
        datatype: 
            geo
        input_parameter:
            file: [geodetic_in.nc, geodetic_io.nc, geodetic_tx.nc]
            orientation: [nadir, oblique, cross]
            gridtype: [infrared, infrared, tiepoints]
            variable: [latitude_in, latitude_io, latitude_tx]
        output_parameter:
            group: geo
            variable: lat
            longname: reference_grid_latitude
            
    lon:
        datatype: 
            geo
        input_parameter:
            file: [geodetic_in.nc, geodetic_io.nc, geodetic_tx.nc]
            orientation: [nadir, oblique, cross]
            gridtype: [infrared, infrared, tiepoints]
            variable: [longitude_in, longitude_io, longitude_tx]
        output_parameter:
            group: geo
            variable: lon
            longname: reference_grid_longitude
            
    sat_zen:
        datatype:
            auxiliary
        input_parameter:
            file: [geometry_tn.nc, geometry_to.nc]
            orientation: [nadir, oblique]
            gridtype: [tiepoints, tiepoints]
            variable: [sat_zenith_tn, sat_zenith_to]
        grid_parameter:
            longitude: longitude_tx
            latitude: latitude_tx 
        output_parameter:
            group: misc
            variable: [sat_zen_n, sat_zen_o]
            longname: [slstr_sensor_zenith_angle_nadir, slstr_sensor_zenith_angle_oblique]

    sat_azi:
        datatype:
            auxiliary
        input_parameter:
            file: [geometry_tn.nc, geometry_to.nc]
            orientation: [nadir, oblique]
            gridtype: [tiepoints, tiepoints]
            variable: [sat_azimuth_tn, sat_azimuth_to]
        grid_parameter:
            longitude: longitude_tx
            latitude: latitude_tx 
        output_parameter:
            group: misc
            variable: [sat_azi_n, sat_azi_o]
            longname: [slstr_sensor_azimuth_angle_nadir, slstr_sensor_azimuth_angle_oblique]        

    sol_zen:
        datatype:
            auxiliary
        input_parameter:
            file: [geometry_tn.nc, geometry_to.nc]
            orientation: [nadir, oblique]
            gridtype: [tiepoints, tiepoints]
            variable: [solar_zenith_tn, solar_zenith_to]
        grid_parameter:
            longitude: longitude_tx
            latitude: latitude_tx 
        output_parameter:
            group: misc
            variable: [sol_zen_n, sol_zen_o]
            longname: [slstr_solar_zenith_angle_nadir, slstr_solar_zenith_angle_oblique]

    sol_azi:
        datatype:
            auxiliary
        input_parameter:
            file: [geometry_tn.nc, geometry_to.nc]
            orientation: [nadir, oblique]
            gridtype: [tiepoints, tiepoints]
            variable: [solar_azimuth_tn, solar_azimuth_to]
        grid_parameter:
            longitude: longitude_tx
            latitude: latitude_tx 
        output_parameter:
            group: misc
            variable: [sol_azi_n, sol_azi_o]
            longname: [slstr_solar_azimuth_angle_nadir, slstr_solar_azimuth_angle_oblique]

    bayes:
        datatype:
            auxiliary
        input_parameter:
            file: [flags_in.nc, flags_io.nc]
            orientation: [nadir, oblique]
            gridtype: [infrared, infrared]
            variable: [bayes_in, bayes_io]
        grid_parameter:
            longitude: [longitude_in, longitude_io]
            latitude: [latitude_in, latitude_io]
        output_parameter:
            group: misc
            variable: [bayes_n, bayes_o]
            longname: [slstr_bayes_cls_nadir, slstr_bayes_cls_oblique]
       
    cloud:
        datatype:
            auxiliary
        input_parameter:
            file: [flags_in.nc, flags_io.nc]
            orientation: [nadir, oblique]
            gridtype: [infrared, infrared]
            variable: [cloud_in, cloud_io]
        grid_parameter:
            longitude: [longitude_in, longitude_io]
            latitude: [latitude_in, latitude_io]
        output_parameter:
            group: misc
            variable: [cloud_n, cloud_o]
            longname: [slstr_cloud_cls_nadir, slstr_cloud_cls_oblique]        
        
    s7:
        datatype:
            radiance
        input_parameter:
            file: [S7_BT_in.nc, S7_BT_io.nc]
            orientation: [nadir, oblique]
            gridtype: [infrared, infrared]
            variable: [S7_BT_in, S7_BT_io]
        grid_parameter:
            longitude: [longitude_in, longitude_io]
            latitude: [latitude_in, latitude_io]
        process_parameter:
            exclusion_variable: [S7_exception_in, S7_exception_io] 
        output_parameter:
            group: bt
            variable: [s7_n, s7_o]
            longname: [slstr_ch7_nadir, slstr_ch7_oblique]
            
    s8:
        datatype:
            radiance
        input_parameter:
            file: [S8_BT_in.nc, S8_BT_io.nc]
            orientation: [nadir, oblique]
            gridtype: [infrared, infrared]
            variable: [S8_BT_in, S8_BT_io]
        grid_parameter:
            longitude: [longitude_in, longitude_io]
            latitude: [latitude_in, latitude_io]
        process_parameter:
            exclusion_variable: [S8_exception_in, S8_exception_io] 
        output_parameter:
            group: bt
            variable: [s8_n, s8_o]
            longname: [slstr_ch8_nadir, slstr_ch8_oblique]

    s9:
        datatype:
            radiance
        input_parameter:
            file: [S9_BT_in.nc, S9_BT_io.nc]
            orientation: [nadir, oblique]
            gridtype: [infrared, infrared]
            variable: [S9_BT_in, S9_BT_io]
        grid_parameter:
            longitude: [longitude_in, longitude_io]
            latitude: [latitude_in, latitude_io]
        process_parameter:
            exclusion_variable: [S9_exception_in, S9_exception_io] 
        output_parameter:
            group: bt
            variable: [s9_n, s9_o]
            longname: [slstr_ch9_nadir, slstr_ch9_oblique]           
            